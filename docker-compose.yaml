# version: "3.8"

services:
  rabbitmq:
    image: "rabbitmq:4-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - work

  elastic:
    image: elasticsearch:8.15.2
    container_name: elastic
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - work

  kibana:
    image: kibana:8.15.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200
    depends_on:
      - elastic
    networks:
      - work

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: volga
    networks:
      - work

  pgadmin:
    image: dpage/pgadmin4
    container_name: pga
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - work

  account_service:
    build:
      context: ./account/
    container_name: account_service
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - postgres
#      - redis
    env_file:
      - ./account/.env
    networks:
      - work

  hospitals_service:
    build:
      context: ./hospital/
    container_name: hospital_service
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
      - postgres
#      - redis
    env_file:
      - ./hospital/.env
    networks:
      - work

  timetable_service:
    build:
      context: ./timetable/
    container_name: timetable_service
    ports:
      - "8083:8083"
    depends_on:
      - rabbitmq
      - postgres
#      - redis
    env_file:
      - ./timetable/.env
    networks:
      - work
      
  document_service:
    build:
      context: ./document/
    container_name: document_service
    ports:
      - "8084:8084"
    depends_on:
      - rabbitmq
      - postgres
      - elastic
#      - redis
    env_file:
      - ./document/.env
    networks:
      - work

networks:
  work:

volumes:
  postgres_data:
  # redis_data:
  elastic_data: